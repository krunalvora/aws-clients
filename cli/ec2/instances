#!/bin/bash

# Sample: 
# aws ec2 describe-instances --query "Reservations[*].Instances[*].[Tags[?Key=='Name']|[0].Value,PrivateIpAddress]" --output table --profile <>-super-user --filters "Name=tag:Name, Values=<>"

source "`dirname $0`"/../aws-profiles

while getopts ":ha:n:q:i:" opt; do
  case ${opt} in
    h )
      echo "Options:"
      echo "    -h  Display this help message."
      echo "    -a  AWS account or set env var AWS_ACCOUNT."
      echo "    -n  Name of the instance or partial name."
      echo "    -i  Instance ID."
      echo "    -q  Optional query for output."
      exit 0
      ;;
    a )
      ACCOUNT="$OPTARG"
      ;;
    n )
      NAME=$OPTARG
      ;;
    i )
      INSTANCE_ID=$OPTARG
      ;;
    q )
      QUERY=$OPTARG
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      ;;
  esac
done
shift $((OPTIND -1))

if [[ -z "$ACCOUNT" ]]; then
  if [[ -z "$AWS_ACCOUNT" ]] ; then
    echo "Either set env var AWS_ACCOUNT or provide it via -a option."
    exit 1
  else
    ACCOUNT=$AWS_ACCOUNT
  fi
fi
# echo
# echo "ACCOUNT :: $ACCOUNT"
PROFILE=${!ACCOUNT}
if [[ -z "$QUERY"  ]]; then
  QUERY="Reservations[*].Instances[*].[Tags[?Key=='Name']|[0].Value,PrivateIpAddress,InstanceId,Tags[?Key=='aws:autoscaling:groupName']|[0].Value,SubnetId,VpcId]"
fi
OUTPUT="text"


if [ -z "$INSTANCE_ID" ]; then

if [ -z "$NAME" ]; then
	aws ec2 describe-instances \
	--query $QUERY \
	--output $OUTPUT \
	--profile=$PROFILE
else
	INSTANCES=$(aws ec2 describe-instances \
	--query $QUERY \
	--output $OUTPUT \
	--profile=$PROFILE \
	--filters "Name=tag:Name, Values=*$NAME*")
        # | awk '{$5=system("echo "$5); print}'
  IFS=$'\n'
  for instance in $INSTANCES    
  do
      echo "$instance"
  done
fi

else
  aws ec2 describe-instances \
  --query $QUERY \
  --output $OUTPUT \
  --profile=$PROFILE \
  --instance-id=$INSTANCE_ID

fi

